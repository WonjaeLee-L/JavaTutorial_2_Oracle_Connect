* DB절차
1. 드라이버로드
2. 커넥션 획득
3. 쿼리문 작성
4. Mapping
5. 실행
6. 리턴값 처리


Class1. Main

Class2. FishDAO(Database Access) - CRUD만 한다(주방장) - 객체 하나만 있어도 된다.(여러개여도 되지만, 힙메모리를 불필요하게 사용하는 점이 우려됨)
								 - 싱글톤 처리(외부에서 얘의 객체를 못만든다. 나만이 내 객체를 만들고 외부에서 요청하면 주소 알려준다.)
	각 기능이 있는 메서드를 미리 만들어 놓겠다.
	- 이 안에 DB절차를 넣어놓으면, 테이블명 등 자료가 변화되면 이 Class만 수정하면 됨
	insert()	
	delete()
	selectAll()
	selectOne()
	updateFish()
	updateCnt()


Class3. Fishservice - 고객에게 서비스하는 목적의 클래스(홀매니저) - 객체 하나만 있어도 된다.(여러개여도 되지만, 힙메모리를 불필요하게 사용하는 점이 우려됨)
	등록
	삭제
	수정
	전체보기
	자세히보기
>> 이런 역할만 한다. 실제 안에 insert인지 알 필요 없음

Class4. FishDTO - 객체는 여러개여야 한다.(튜플 하나당 하나라서 객체는 무조건 여러개 있어야 한다)
	변수 여러개를 만드는 대신에, DTO변수 하나로 DAO에 넘기기 위해서 필요하다.

5. DB
	fish
	- id 
	- password
	
	
1. 프로젝트에 라이브러리 빌드(생성해서 준비)
  >> 이클립스 기준으로 프로젝트 우클릭 후, build path
 configure >> libraries >> add external jars >> 준비한 라이브러리 적용

2. 라이브러리로부터 필요한 드라이버를 로드한다. < 1회>
  >> 현실적으로 디자인하기 위해서, 클래스 구조를 먼저 변경하고 간다. 




* 쿼리문 보는 법 - 순서보기

* 코드 보는 법 - 1. 패키지 구분 파악
              2. 클래스를 어떤 목적으로 만들었는지 파악(멤버변수와 메서드보기)
              3. 메서드를 어떻게 정의했는지 보기
              
 